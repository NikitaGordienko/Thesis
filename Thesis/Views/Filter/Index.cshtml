@using Microsoft.AspNetCore.Identity;
@using Thesis.Models;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model Thesis.Models.PagingResult<Thesis.Models.Object>
@inject Thesis.Data.ApplicationDbContext _context
@inject UserManager<User> userManager

@{
    Layout = "_Layout";
    ViewData["Title"] = "Поиск";
}


<main class="search" style="padding-bottom: 50px;">
    <div class="container">
        <form method="post" asp-controller="Filter" asp-action="ApplyFilter" id="filter-form">
            <div class="search-left">
                <div class="search-filter-title">Фильтр</div>
                <div class="search-filter">
                    <div class="filter-item" id="filter-district">
                        <div class="filter-item-name">Район</div>
                        <div class="filter-item-options">
                            @{
                                foreach (var district in _context.Districts.ToList())
                                {
                                    <div class="filter-item-option">
                                        <div class="filter-item-option-checkbox">
                                            <input type="checkbox" id="@district.Id">
                                            <span class="filter-item-option-check"></span>
                                        </div>
                                        <div class="filter-item-option-label">@district.Name (@_context.Objects.Where(t => t.DistrictId == district.Id).Count())</div>
                                    </div>
                                }
                            }

                            <div class="filter-item-showall">+ Показать все</div>
                        </div>
                    </div>
                    <div class="filter-item" id="filter-objecttype">
                        <div class="filter-item-name">Тип объекта</div>
                        <div class="filter-item-options">
                            @{
                                foreach (var objType in _context.ObjectTypes.ToList())
                                {
                                    <div class="filter-item-option">
                                        <div class="filter-item-option-checkbox">
                                            <input type="checkbox" id="@objType.Id">
                                            <span class="filter-item-option-check"></span>
                                        </div>
                                        <div class="filter-item-option-label">@objType.Name (@_context.Objects.Where(t => t.TypeId == objType.Id).Count())</div>
                                    </div>
                                }
                            }
                            <div class="filter-item-showall">+ Показать все</div>
                        </div>
                    </div>
                    <div class="filter-item" id="filter-terrain">
                        <div class="filter-item-name">Покрытие</div>
                        <div class="filter-item-options">
                            @foreach (var terrain in _context.Terrains.ToList())
                            {
                                <div class="filter-item-option">
                                    <div class="filter-item-option-checkbox">
                                        <input type="checkbox" id="@terrain.Id">
                                        <span class="filter-item-option-check"></span>
                                    </div>
                                    <div class="filter-item-option-label">@terrain.Name (@_context.Objects.Where(t => t.TerrainId == terrain.Id).Count())</div>
                                </div>
                            }
                            <div class="filter-item-showall">+ Показать все</div>
                        </div>
                    </div>
                    <div class="filter-item" id="filter-light">
                        <div class="filter-item-name">Освещение</div>
                        <div class="filter-item-options">
                            <div class="filter-item-option">
                                <div class="filter-item-option-checkbox">
                                    <input type="checkbox" id="lighttrue">
                                    <span class="filter-item-option-check"></span>
                                </div>
                                <div class="filter-item-option-label">Есть (@_context.Objects.Where(t => t.Light == true).Count())</div>
                            </div>
                            <div class="filter-item-option">
                                <div class="filter-item-option-checkbox">
                                    <input type="checkbox" id="lightfalse">
                                    <span class="filter-item-option-check"></span>
                                </div>
                                <div class="filter-item-option-label">Нет (@_context.Objects.Where(t => t.Light == false).Count())</div>
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" name="data" value="" />
                <div class="filter-apply" id="filter-apply">Применить</div>
            </div>
        </form>
        <div class="search-right">
            <div class="search-result-header">
                <div class="search-result-title">Результаты поиска (<span class="search-result-count">@Model.RowCount</span>)</div>
                <div class="search-result-clear"><a href="@Url.Action("Index", new { page = 1 })" style="font-size: 16px;">Сбросить фильтр</a></div>
            </div>
            @{
                User currentUser = null;
                if (User.Identity.IsAuthenticated)
                {
                    currentUser = _context.Users.First(x => x.UserName == User.Identity.Name);
                }
            }
            <div class="search-result-list">
                @{
                    foreach (var objItem in Model.Results)
                    {
                        string objLight = "Есть";
                        if (objItem.Light == false)
                        {
                            objLight = "Нет";
                        }
                        <div class="search-result-item" id="@objItem.Id">

                            <div class="search-result-item-left" style="display: flex;">
                                <div class="search-result-photo">
                                    <img src="@objItem.Photo.Path" alt="">
                                </div>
                                <div class="search-result-address-info">
                                    <div class="search-result-item-type">@objItem.Type.Name</div>
                                    <div class="search-result-address-district">@objItem.District.Name</div>
                                </div>
                            </div>
                            <div class="search-result-item-right">
                                <div class="search-result-item-props">

                                    <div class="search-result-item-terrain">Покрытие: <span>@objItem.Terrain.Name</span></div>
                                    <div class="search-result-item-light">Освещение: <span>@objLight</span></div>
                                </div>
                            </div>
                            <div class="search-result-bottom" style="min-height: 38px">
                                <a href="#" class="search-result-item-map" data-itemlocation="@objItem.Address">Показать на карте</a>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    // получаем все записи UserObjects от конкретной площадки
                                    List<UserObject> objUserObjects = _context.UserObjects.Where(x => x.ObjectId == objItem.Id).ToList();
                                    List<string> objUserIds = new List<string>();
                                    foreach (UserObject objUserObject in objUserObjects)
                                    {
                                        objUserIds.Add(objUserObject.UserId);
                                    }
                                    if (objUserIds.Contains(currentUser.Id))
                                    {
                                        <div class="search-result-subscribe unsubscribe" id="unsubscribe_@objItem.Id"></div>
                                    }
                                    else
                                    {
                                        <div class="search-result-subscribe subscribe" id="subscribe_@objItem.Id"></div>
                                    }

                                }


                            </div>

                        </div>
                    }

                }

            </div>
            <ul class="search-pagination clearfix">
                @for (var p = 1; p <= Model.PageCount; p++)
                {
                    <li>
                        @if (p == Model.CurrentPage)
                        {
                            if ((bool)ViewData["filtered"] == false)
                            {
                                <a href="@Url.Action("Index", new { page = p })" class="pagination-page current">@p</a>
                            }

                        }
                        else
                        {
                            if ((bool)ViewData["filtered"] == false)
                            {
                                <a href="@Url.Action("Index", new { page = p })" class="pagination-page">@p</a>
                            }

                        }
                    </li>
                }
            </ul>
            <div class="search-result-question">
                Не нашли площадку?<br><a href="#">Добавьте</a> информацию о ней вручную
            </div>
        </div>
    </div>
</main>

<div class="filter-item-location-table">
    <div class="filter-item-location-cell">
        <div class="filter-item-map-wrap">
            <div id="filter-map"></div>
        </div>
    </div>
    <div class="filter-item-location-close"></div>
</div>

<div class="add-object-wrap-table ">
    @{
        await Html.RenderPartialAsync("SuggestInfo");
    };
</div>